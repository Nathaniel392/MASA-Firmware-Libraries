"""
MASA pressure transducer calibration generator script

Michigan Aeronautical Science Association
Author: Leif Gullstad (leifg@umich.edu)
Created: December 20, 2020 
Updated: December 21, 2020

Program expects input file to be a csv formatted as ID,Slope,offset
"""
import time
import sys
import csv

# Used to split() lines into columns
COLUMN_DELIMITER = ','

def main():

    # Autogeneration label and timestamp
    begin_autogen_tag = "/// BEGIN AUTOGENERATED SECTION - MODIFICATIONS TO THIS CODE WILL BE OVERWRITTEN\n"
    end_autogen_tag = "/// END AUTOGENERATED SECTION - USER CODE GOES BELOW THIS LINE\n"
    autogen_label = "/// Autogenerated by pt_calibration_generator.py on " + time.ctime()

    # Don't think I need to create a globals file
    # If globals needed, generate here

    # Strings to hold what I want printed into the file
    pack_pt_calibration_h_str = ""

    pack_pt_calibration_h_str += begin_autogen_tag + "\n/// pack_pt_calibration.h\n" + autogen_label + "\n\n"

    # Loop through csv file using iterator
    # Hard coded filename. Should be passed in as command line arg
    channel_num = -1

    # Holds values for slope and offset
    calibration_h_slope = ""
    calibration_h_offset = ""
    # Iterate through csv file storing values of slopes and offsets
    with open('pt_calibration.csv') as csvfile:
        data_iter = csv.reader(csvfile, delimiter = COLUMN_DELIMITER)
        for row in data_iter:
            if(channel_num > 0):
                calibration_h_slope += ", "
                calibration_h_offset += ", "
                # New line every 5 numbers for readability
                if (channel_num % 5 == 0):
                    calibration_h_slope += "\n\t\t\t\t\t"
                    calibration_h_offset += "\n\t\t\t\t\t"
            if (channel_num != -1): # Skips first row with column titles
                calibration_h_slope += str(row[1])
                calibration_h_offset += str(row[2])
            channel_num += 1


    calibration_h_slope += "};\n\n"
    calibration_h_offset += "};"
    slope_declaration = "double pt_slope[" + str(channel_num) + "] = {"
    offset_declaration = "double pt_offset[" + str(channel_num) + "] = {"


    # Print file strings to files
    pack_pt_calibration_h = open("../inc/pack_pt_calibration.h", "w+")
    pack_pt_calibration_h.write(pack_pt_calibration_h_str + slope_declaration + \
    calibration_h_slope + offset_declaration + calibration_h_offset)

if __name__ == '__main__':
    main()
